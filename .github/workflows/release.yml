name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      
      - name: Generate Windows metadata
        run: |
          cd cmd/testctxlint
          go generate gen_syso.go
      
      - name: Commit updated syso back to repository
        id: syso-update
        run: |
          # Check if the syso file was modified
          if git diff --quiet cmd/testctxlint/icon_windows_amd64.syso; then
            echo "No changes to syso file, skipping commit"
            echo "retagged=false" >> $GITHUB_OUTPUT
          else
            echo "Syso file was updated, committing to main branch"
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            # Store the updated syso file
            cp cmd/testctxlint/icon_windows_amd64.syso /tmp/icon_windows_amd64.syso
            
            # Switch to main branch and apply the changes
            git fetch origin main
            git checkout main
            cp /tmp/icon_windows_amd64.syso cmd/testctxlint/icon_windows_amd64.syso
            
            # Commit and push the changes
            git add cmd/testctxlint/icon_windows_amd64.syso
            git commit -m "build: update syso for ${{ github.ref_name }}"
            git push origin main
            
            # Delete the existing tag and recreate it on the updated main branch
            echo "Retagging ${{ github.ref_name }} to include syso changes"
            git tag -d ${{ github.ref_name }}
            git push origin --delete ${{ github.ref_name }}
            git tag ${{ github.ref_name }}
            git push origin ${{ github.ref_name }}
            
            # Set output to skip GoReleaser - the new tag push will trigger a fresh release
            echo "Workflow will skip GoReleaser - new tag will trigger fresh release with updated syso"
            echo "retagged=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Run GoReleaser
        if: steps.syso-update.outputs.retagged != 'true'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}